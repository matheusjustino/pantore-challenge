version: '3.8'

services:
    backend:
        container_name: 'api'
        build:
            dockerfile: Dockerfile
            context: .
        env_file: .env.docker
        ports:
            - '8080:8080'
        volumes:
            - ./users-api:/home/app:cached
            - ./users-api/package.json:/home/app/package.json:cached
        depends_on:
            database:
                condition: service_healthy
        networks:
            - pantore_network

    database:
        image: postgres:14.4-alpine
        container_name: pantore-db
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: docker
            POSTGRES_DB: pantore-db
        ports:
            - 5432:5432
        networks:
            - pantore_network
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 5s
            timeout: 5s
            retries: 5

networks:
    pantore_network:
